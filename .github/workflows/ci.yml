name: Continuous Integration

on:
  push:
    branches-ignore:
      - "main"

jobs:
  create-virtualenv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12.3"
          architecture: "x64"
      - name: Install pipenv
        run: python -m pip install pipenv
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: Pipfile.lock
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      - run: pipenv install --dev
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  style:
    needs: create-virtualenv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12.3"
          architecture: "x64"
      - name: Install pipenv
        run: python -m pip install pipenv
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: Pipfile.lock
      - name: Install dependencies
        run: pipenv install --dev
      - name: Run flake8
        run: pipenv run flake8 . --show-source --statistics
        env:
          DJANGO_SETTINGS_MODULE: Echo.settings
      - name: Run isort
        run: pipenv run isort . --check-only --diff
      - name: Run pydocstyle
        run: pipenv run pydocstyle .

  tests:
    needs: create-virtualenv
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: echo_admin
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12.3"
          architecture: "x64"
      - name: Install pipenv
        run: python -m pip install pipenv
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: Pipfile.lock
      - name: Install dependencies
        run: pipenv install --dev
      - run: |
          pipenv run coverage run --source='.' manage.py test
          pipenv run coverage report --fail-under=93
        env:
          DJANGO_SETTINGS_MODULE: Echo.settings
